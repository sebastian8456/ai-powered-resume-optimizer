{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jiaji\\\\OneDrive\\\\Documents\\\\IS 376\\\\ai-powered-resume-optimizer\\\\ai-powered-resume-optimizer\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [resumeText, setResumeText] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [isOptimizing, setIsOptimizing] = useState(false);\n  const [message, setMessage] = useState('');\n  // New state for structured suggestions\n  const [suggestions, setSuggestions] = useState({\n    summary: [],\n    experience: [],\n    education: [],\n    skills: [],\n    other: []\n  });\n  const [isExporting, setIsExporting] = useState(false);\n\n  // Auth state\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [showLogin, setShowLogin] = useState(true); // true for login, false for register\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [authMessage, setAuthMessage] = useState('');\n  const [accessToken, setAccessToken] = useState('');\n  const [loggedInUsername, setLoggedInUsername] = useState(''); // Store logged in username\n\n  // Check if user is already logged in on component mount\n  useEffect(() => {\n    const token = localStorage.getItem('access_token');\n    const savedUsername = localStorage.getItem('username');\n    if (token) {\n      setAccessToken(token);\n      setIsLoggedIn(true);\n      if (savedUsername) {\n        setLoggedInUsername(savedUsername);\n      }\n    }\n  }, []);\n\n  // Set up axios interceptor to include token in requests\n  useEffect(() => {\n    if (accessToken) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;\n    } else {\n      delete axios.defaults.headers.common['Authorization'];\n    }\n  }, [accessToken]);\n  const handleRegister = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    try {\n      await axios.post('http://localhost:8000/register', {\n        username,\n        password\n      });\n      setAuthMessage('Registration successful! Please login.');\n      setShowLogin(true);\n      setUsername('');\n      setPassword('');\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setAuthMessage('Registration failed: ' + (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || error.message));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleLogin = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    try {\n      const response = await axios.post('http://localhost:8000/login', {\n        username,\n        password\n      });\n      const token = response.data.access_token;\n      setAccessToken(token);\n      setLoggedInUsername(username); // Store the logged in username\n      localStorage.setItem('access_token', token);\n      localStorage.setItem('username', username); // Store username in localStorage\n      setIsLoggedIn(true);\n      setAuthMessage('Login successful!');\n      setUsername(''); // Clear form\n      setPassword(''); // Clear form\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      setAuthMessage('Login failed: ' + (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.detail) || error.message));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleLogout = async () => {\n    try {\n      await axios.post('http://localhost:8000/logout');\n    } catch (error) {\n      console.log('Logout request failed, but continuing with local logout');\n    }\n    setAccessToken('');\n    setLoggedInUsername('');\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('username');\n    setIsLoggedIn(false);\n    setResumeText('');\n    setMessage('');\n    setAuthMessage('Logged out successfully');\n  };\n  const handleFileUpload = async e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    setIsLoading(true);\n    try {\n      if (file.type === 'application/pdf') {\n        const formData = new FormData();\n        formData.append('file', file);\n        const response = await axios.post('http://localhost:8000/upload-resume', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        setResumeText(response.data.text);\n        setMessage('PDF uploaded and parsed successfully!');\n      } else {\n        const reader = new FileReader();\n        reader.onload = event => {\n          setResumeText(event.target.result);\n        };\n        reader.readAsText(file);\n      }\n    } catch (error) {\n      var _error$response3;\n      if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 401) {\n        setMessage('Please login to upload resumes');\n        handleLogout();\n      } else {\n        setMessage('Error uploading file: ' + error.message);\n      }\n      console.error(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const generateExampleResume = async () => {\n    setIsGenerating(true);\n    try {\n      const response = await axios.get('http://localhost:8000/create-resume');\n      setResumeText(response.data['New resume: ']);\n      setMessage('Example resume generated!');\n    } catch (error) {\n      var _error$response4;\n      if (((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) === 401) {\n        setMessage('Please login to generate resumes');\n        handleLogout();\n      } else {\n        setMessage('Error generating resume');\n      }\n      console.error(error);\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n  const optimizeResume = async () => {\n    setIsOptimizing(true);\n    try {\n      const response = await axios.post('http://localhost:8000/optimize-resume', {\n        text: resumeText,\n        id: null\n      });\n\n      // Update suggestions with the structured data from the backend\n      if (response.data && response.data.suggestions) {\n        setSuggestions(response.data.suggestions);\n        setMessage('Resume analyzed! Click on suggestions below to apply them.');\n      } else {\n        setMessage('Error: Invalid response format from server');\n      }\n    } catch (error) {\n      var _error$response5;\n      if (((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.status) === 401) {\n        setMessage('Please login to optimize resumes');\n        handleLogout();\n      } else {\n        var _error$response6, _error$response6$data;\n        setMessage('Error optimizing resume: ' + (((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.detail) || error.message));\n      }\n      console.error(error);\n    } finally {\n      setIsOptimizing(false);\n    }\n  };\n  const applySuggestion = suggestion => {\n    if (suggestion.original) {\n      // Replace existing text\n      setResumeText(prevText => {\n        const newText = prevText.replace(suggestion.original, suggestion.improved);\n        return newText;\n      });\n    } else {\n      // Add new text\n      setResumeText(prevText => {\n        // Add new text with proper spacing\n        const newText = prevText.trim() + '\\n\\n' + suggestion.improved;\n        return newText;\n      });\n    }\n  };\n  const handleExportResume = async () => {\n    setIsExporting(true);\n    try {\n      console.log('Sending resume text:', resumeText); // Debug log\n\n      const response = await axios.post('http://localhost:8000/export-resume', {\n        text: resumeText\n      }, {\n        responseType: 'blob' // Important: This tells axios to expect binary data\n      });\n      console.log('Received response:', response); // Debug log\n\n      // Create a download link for the PDF\n      const url = window.URL.createObjectURL(new Blob([response.data], {\n        type: 'application/pdf'\n      }));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', 'resume.pdf');\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n      window.URL.revokeObjectURL(url);\n      setMessage('Resume downloaded successfully!');\n    } catch (error) {\n      var _error$response7, _error$response7$data;\n      console.error('Export error:', error); // Debug log\n      console.error('Error response:', error.response); // Debug log\n      setMessage('Error exporting resume: ' + (((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : (_error$response7$data = _error$response7.data) === null || _error$response7$data === void 0 ? void 0 : _error$response7$data.detail) || error.message));\n    } finally {\n      setIsExporting(false);\n    }\n  };\n  const matchJobs = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\"http://127.0.0.1:8000/match-jobs/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          text: resumeText\n        })\n      });\n      if (!response.ok) {\n        const errData = await response.json();\n        throw new Error(errData.detail || \"Failed to fetch job posting\");\n      }\n      const data = await response.json();\n      navigate(\"/match-result\", {\n        state: {\n          jobPosting: data\n        }\n      });\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // If not logged in, show auth form\n  if (!isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"AI-Powered Resume Optimizer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-toggle\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: showLogin ? 'active' : '',\n            onClick: () => setShowLogin(true),\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: !showLogin ? 'active' : '',\n            onClick: () => setShowLogin(false),\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: showLogin ? handleLogin : handleRegister,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: showLogin ? 'Login' : 'Register'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Username:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: username,\n              onChange: e => setUsername(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              value: password,\n              onChange: e => setPassword(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: isLoading,\n            children: isLoading ? 'Processing...' : showLogin ? 'Login' : 'Register'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this), authMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-message\",\n          children: authMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this);\n  }\n\n  // If logged in, show main app\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"AI-Powered Resume Optimizer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Welcome, \", loggedInUsername, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          className: \"logout-btn\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"resume-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Upload Your Resume\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".txt,.pdf,.docx\",\n          onChange: handleFileUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"generate-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Or Generate Example\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: generateExampleResume,\n          disabled: isGenerating,\n          children: isGenerating ? 'Generating...' : 'Generate Example Resume'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"resume-display\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Resume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: resumeText,\n        onChange: e => setResumeText(e.target.value),\n        placeholder: \"Your resume will appear here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"optimize-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: optimizeResume,\n        disabled: !resumeText || isOptimizing,\n        children: isOptimizing ? 'Optimizing...' : 'Optimize Resume'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: matchJobs,\n        disabled: !resumeText || isOptimizing,\n        children: isMatching ? 'Matching...' : 'Match Jobs'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleExportResume,\n        disabled: !resumeText || isExporting,\n        className: \"export-btn\",\n        children: isExporting ? 'Exporting...' : 'Save & Export Resume'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 9\n    }, this), Object.keys(suggestions).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"suggestions-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Optimization Suggestions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 11\n      }, this), Object.entries(suggestions).map(([section, sectionSuggestions]) => sectionSuggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"suggestion-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: section.charAt(0).toUpperCase() + section.slice(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"suggestion-buttons\",\n          children: sectionSuggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => applySuggestion(suggestion),\n            className: \"suggestion-btn\",\n            children: suggestion.original ? `Replace: \"${suggestion.original.substring(0, 30)}...\"` : `Add: \"${suggestion.improved.substring(0, 30)}...\"`\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 17\n        }, this)]\n      }, section, true, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 335,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"GqaKkbylcG+xbMRNitMuqSpWi+o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","resumeText","setResumeText","isLoading","setIsLoading","isGenerating","setIsGenerating","isOptimizing","setIsOptimizing","message","setMessage","suggestions","setSuggestions","summary","experience","education","skills","other","isExporting","setIsExporting","isLoggedIn","setIsLoggedIn","showLogin","setShowLogin","username","setUsername","password","setPassword","authMessage","setAuthMessage","accessToken","setAccessToken","loggedInUsername","setLoggedInUsername","token","localStorage","getItem","savedUsername","defaults","headers","common","handleRegister","e","preventDefault","post","error","_error$response","_error$response$data","response","data","detail","handleLogin","access_token","setItem","_error$response2","_error$response2$data","handleLogout","console","log","removeItem","handleFileUpload","file","target","files","type","formData","FormData","append","text","reader","FileReader","onload","event","result","readAsText","_error$response3","status","generateExampleResume","get","_error$response4","optimizeResume","id","_error$response5","_error$response6","_error$response6$data","applySuggestion","suggestion","original","prevText","newText","replace","improved","trim","handleExportResume","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","remove","revokeObjectURL","_error$response7","_error$response7$data","matchJobs","setLoading","setError","fetch","method","JSON","stringify","ok","errData","json","Error","navigate","state","jobPosting","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","value","onChange","required","disabled","accept","placeholder","isMatching","Object","keys","length","entries","map","section","sectionSuggestions","charAt","toUpperCase","slice","index","substring","_c","$RefreshReg$"],"sources":["C:/Users/jiaji/OneDrive/Documents/IS 376/ai-powered-resume-optimizer/ai-powered-resume-optimizer/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [resumeText, setResumeText] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isGenerating, setIsGenerating] = useState(false);\r\n  const [isOptimizing, setIsOptimizing] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  // New state for structured suggestions\r\n  const [suggestions, setSuggestions] = useState({\r\n    summary: [],\r\n    experience: [],\r\n    education: [],\r\n    skills: [],\r\n    other: []\r\n  });\r\n  const [isExporting, setIsExporting] = useState(false);\r\n  \r\n  // Auth state\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [showLogin, setShowLogin] = useState(true); // true for login, false for register\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [authMessage, setAuthMessage] = useState('');\r\n  const [accessToken, setAccessToken] = useState('');\r\n  const [loggedInUsername, setLoggedInUsername] = useState(''); // Store logged in username\r\n\r\n  // Check if user is already logged in on component mount\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('access_token');\r\n    const savedUsername = localStorage.getItem('username');\r\n    if (token) {\r\n      setAccessToken(token);\r\n      setIsLoggedIn(true);\r\n      if (savedUsername) {\r\n        setLoggedInUsername(savedUsername);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // Set up axios interceptor to include token in requests\r\n  useEffect(() => {\r\n    if (accessToken) {\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;\r\n    } else {\r\n      delete axios.defaults.headers.common['Authorization'];\r\n    }\r\n  }, [accessToken]);\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    try {\r\n      await axios.post('http://localhost:8000/register', {\r\n        username,\r\n        password\r\n      });\r\n      setAuthMessage('Registration successful! Please login.');\r\n      setShowLogin(true);\r\n      setUsername('');\r\n      setPassword('');\r\n    } catch (error) {\r\n      setAuthMessage('Registration failed: ' + (error.response?.data?.detail || error.message));\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await axios.post('http://localhost:8000/login', {\r\n        username,\r\n        password\r\n      });\r\n      \r\n      const token = response.data.access_token;\r\n      setAccessToken(token);\r\n      setLoggedInUsername(username); // Store the logged in username\r\n      localStorage.setItem('access_token', token);\r\n      localStorage.setItem('username', username); // Store username in localStorage\r\n      setIsLoggedIn(true);\r\n      setAuthMessage('Login successful!');\r\n      setUsername(''); // Clear form\r\n      setPassword(''); // Clear form\r\n    } catch (error) {\r\n      setAuthMessage('Login failed: ' + (error.response?.data?.detail || error.message));\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      await axios.post('http://localhost:8000/logout');\r\n    } catch (error) {\r\n      console.log('Logout request failed, but continuing with local logout');\r\n    }\r\n    \r\n    setAccessToken('');\r\n    setLoggedInUsername('');\r\n    localStorage.removeItem('access_token');\r\n    localStorage.removeItem('username');\r\n    setIsLoggedIn(false);\r\n    setResumeText('');\r\n    setMessage('');\r\n    setAuthMessage('Logged out successfully');\r\n  };\r\n\r\n  const handleFileUpload = async (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n\r\n    setIsLoading(true);\r\n    try {\r\n      if (file.type === 'application/pdf') {\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n\r\n        const response = await axios.post('http://localhost:8000/upload-resume', formData, {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n          },\r\n        });\r\n        \r\n        setResumeText(response.data.text);\r\n        setMessage('PDF uploaded and parsed successfully!');\r\n      } else {\r\n        const reader = new FileReader();\r\n        reader.onload = (event) => {\r\n          setResumeText(event.target.result);\r\n        };\r\n        reader.readAsText(file);\r\n      }\r\n    } catch (error) {\r\n      if (error.response?.status === 401) {\r\n        setMessage('Please login to upload resumes');\r\n        handleLogout();\r\n      } else {\r\n        setMessage('Error uploading file: ' + error.message);\r\n      }\r\n      console.error(error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const generateExampleResume = async () => {\r\n    setIsGenerating(true);\r\n    try {\r\n      const response = await axios.get('http://localhost:8000/create-resume');\r\n      setResumeText(response.data['New resume: ']);\r\n      setMessage('Example resume generated!');\r\n    } catch (error) {\r\n      if (error.response?.status === 401) {\r\n        setMessage('Please login to generate resumes');\r\n        handleLogout();\r\n      } else {\r\n        setMessage('Error generating resume');\r\n      }\r\n      console.error(error);\r\n    } finally {\r\n      setIsGenerating(false);\r\n    }\r\n  };\r\n\r\n  const optimizeResume = async () => {\r\n    setIsOptimizing(true);\r\n    try {\r\n        const response = await axios.post('http://localhost:8000/optimize-resume', {\r\n            text: resumeText,\r\n            id: null\r\n        });\r\n        \r\n        // Update suggestions with the structured data from the backend\r\n        if (response.data && response.data.suggestions) {\r\n            setSuggestions(response.data.suggestions);\r\n            setMessage('Resume analyzed! Click on suggestions below to apply them.');\r\n        } else {\r\n            setMessage('Error: Invalid response format from server');\r\n        }\r\n    } catch (error) {\r\n        if (error.response?.status === 401) {\r\n          setMessage('Please login to optimize resumes');\r\n          handleLogout();\r\n        } else {\r\n          setMessage('Error optimizing resume: ' + (error.response?.data?.detail || error.message));\r\n        }\r\n        console.error(error);\r\n    } finally {\r\n        setIsOptimizing(false);\r\n    }\r\n  };\r\n\r\n  const applySuggestion = (suggestion) => {\r\n    if (suggestion.original) {\r\n      // Replace existing text\r\n      setResumeText(prevText => {\r\n        const newText = prevText.replace(suggestion.original, suggestion.improved);\r\n        return newText;\r\n      });\r\n    } else {\r\n      // Add new text\r\n      setResumeText(prevText => {\r\n        // Add new text with proper spacing\r\n        const newText = prevText.trim() + '\\n\\n' + suggestion.improved;\r\n        return newText;\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleExportResume = async () => {\r\n    setIsExporting(true);\r\n    try {\r\n      console.log('Sending resume text:', resumeText); // Debug log\r\n      \r\n      const response = await axios.post('http://localhost:8000/export-resume', {\r\n        text: resumeText\r\n      }, {\r\n        responseType: 'blob'  // Important: This tells axios to expect binary data\r\n      });\r\n      \r\n      console.log('Received response:', response); // Debug log\r\n      \r\n      // Create a download link for the PDF\r\n      const url = window.URL.createObjectURL(new Blob([response.data], { type: 'application/pdf' }));\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.setAttribute('download', 'resume.pdf');\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      link.remove();\r\n      window.URL.revokeObjectURL(url);\r\n      \r\n      setMessage('Resume downloaded successfully!');\r\n    } catch (error) {\r\n      console.error('Export error:', error); // Debug log\r\n      console.error('Error response:', error.response); // Debug log\r\n      setMessage('Error exporting resume: ' + (error.response?.data?.detail || error.message));\r\n    } finally {\r\n      setIsExporting(false);\r\n    }\r\n  };\r\n\r\n  const matchJobs = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await fetch(\"http://127.0.0.1:8000/match-jobs/\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ text: resumeText }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errData = await response.json();\r\n        throw new Error(errData.detail || \"Failed to fetch job posting\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      navigate(\"/match-result\", { state: { jobPosting: data } });\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // If not logged in, show auth form\r\n  if (!isLoggedIn) {\r\n    return (\r\n      <div className=\"app\">\r\n        <h1>AI-Powered Resume Optimizer</h1>\r\n        \r\n        <div className=\"auth-container\">\r\n          <div className=\"auth-toggle\">\r\n            <button \r\n              className={showLogin ? 'active' : ''} \r\n              onClick={() => setShowLogin(true)}\r\n            >\r\n              Login\r\n            </button>\r\n            <button \r\n              className={!showLogin ? 'active' : ''} \r\n              onClick={() => setShowLogin(false)}\r\n            >\r\n              Register\r\n            </button>\r\n          </div>\r\n\r\n          <form onSubmit={showLogin ? handleLogin : handleRegister}>\r\n            <h2>{showLogin ? 'Login' : 'Register'}</h2>\r\n            \r\n            <div className=\"form-group\">\r\n              <label>Username:</label>\r\n              <input\r\n                type=\"text\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n              <label>Password:</label>\r\n              <input\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n            \r\n            <button type=\"submit\" disabled={isLoading}>\r\n              {isLoading ? 'Processing...' : (showLogin ? 'Login' : 'Register')}\r\n            </button>\r\n          </form>\r\n\r\n          {authMessage && (\r\n            <div className=\"auth-message\">\r\n              {authMessage}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // If logged in, show main app\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"header\">\r\n        <h1>AI-Powered Resume Optimizer</h1>\r\n        <div className=\"user-info\">\r\n          <span>Welcome, {loggedInUsername}!</span>\r\n          <button onClick={handleLogout} className=\"logout-btn\">\r\n            Logout\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"resume-actions\">\r\n        <div className=\"upload-section\">\r\n          <h2>Upload Your Resume</h2>\r\n          <input type=\"file\" accept=\".txt,.pdf,.docx\" onChange={handleFileUpload} />\r\n        </div>\r\n        \r\n        <div className=\"generate-section\">\r\n          <h2>Or Generate Example</h2>\r\n          <button onClick={generateExampleResume} disabled={isGenerating}>\r\n            {isGenerating ? 'Generating...' : 'Generate Example Resume'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"resume-display\">\r\n        <h2>Your Resume</h2>\r\n        <textarea\r\n          value={resumeText}\r\n          onChange={(e) => setResumeText(e.target.value)}\r\n          placeholder=\"Your resume will appear here...\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"optimize-section\">\r\n        <button \r\n          onClick={optimizeResume} \r\n          disabled={!resumeText || isOptimizing}\r\n        >\r\n          {isOptimizing ? 'Optimizing...' : 'Optimize Resume'}\r\n        </button>\r\n        \r\n        <button\r\n          onClick={matchJobs}\r\n          disabled={!resumeText || isOptimizing}\r\n        >\r\n          {isMatching ? 'Matching...' : 'Match Jobs'}\r\n        </button>\r\n\r\n        <button\r\n          onClick={handleExportResume}\r\n          disabled={!resumeText || isExporting}\r\n          className=\"export-btn\"\r\n        >\r\n          {isExporting ? 'Exporting...' : 'Save & Export Resume'}\r\n        </button>\r\n      </div>\r\n\r\n      {message && (\r\n        <div className=\"message\">\r\n          <p>{message}</p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Suggestions Section */}\r\n      {Object.keys(suggestions).length > 0 && (\r\n        <div className=\"suggestions-container\">\r\n          <h2>Optimization Suggestions</h2>\r\n          {Object.entries(suggestions).map(([section, sectionSuggestions]) => (\r\n            sectionSuggestions.length > 0 && (\r\n              <div key={section} className=\"suggestion-section\">\r\n                <h3>{section.charAt(0).toUpperCase() + section.slice(1)}</h3>\r\n                <div className=\"suggestion-buttons\">\r\n                  {sectionSuggestions.map((suggestion, index) => (\r\n                    <button\r\n                      key={index}\r\n                      onClick={() => applySuggestion(suggestion)}\r\n                      className=\"suggestion-btn\"\r\n                    >\r\n                      {suggestion.original ? \r\n                        `Replace: \"${suggestion.original.substring(0, 30)}...\"` :\r\n                        `Add: \"${suggestion.improved.substring(0, 30)}...\"`\r\n                      }\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC1C;EACA,MAAM,CAACiB,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC;IAC7CmB,OAAO,EAAE,EAAE;IACXC,UAAU,EAAE,EAAE;IACdC,SAAS,EAAE,EAAE;IACbC,MAAM,EAAE,EAAE;IACVC,KAAK,EAAE;EACT,CAAC,CAAC;EACF,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;;EAErD;EACA,MAAM,CAAC0B,UAAU,EAAEC,aAAa,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAAC4B,SAAS,EAAEC,YAAY,CAAC,GAAG7B,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAClD,MAAM,CAAC8B,QAAQ,EAAEC,WAAW,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACgC,QAAQ,EAAEC,WAAW,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACkC,WAAW,EAAEC,cAAc,CAAC,GAAGnC,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACoC,WAAW,EAAEC,cAAc,CAAC,GAAGrC,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACsC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGvC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE9D;EACAC,SAAS,CAAC,MAAM;IACd,MAAMuC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IAClD,MAAMC,aAAa,GAAGF,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACtD,IAAIF,KAAK,EAAE;MACTH,cAAc,CAACG,KAAK,CAAC;MACrBb,aAAa,CAAC,IAAI,CAAC;MACnB,IAAIgB,aAAa,EAAE;QACjBJ,mBAAmB,CAACI,aAAa,CAAC;MACpC;IACF;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA1C,SAAS,CAAC,MAAM;IACd,IAAImC,WAAW,EAAE;MACflC,KAAK,CAAC0C,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUV,WAAW,EAAE;IAC1E,CAAC,MAAM;MACL,OAAOlC,KAAK,CAAC0C,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;IACvD;EACF,CAAC,EAAE,CAACV,WAAW,CAAC,CAAC;EAEjB,MAAMW,cAAc,GAAG,MAAOC,CAAC,IAAK;IAClCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBvC,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACF,MAAMR,KAAK,CAACgD,IAAI,CAAC,gCAAgC,EAAE;QACjDpB,QAAQ;QACRE;MACF,CAAC,CAAC;MACFG,cAAc,CAAC,wCAAwC,CAAC;MACxDN,YAAY,CAAC,IAAI,CAAC;MAClBE,WAAW,CAAC,EAAE,CAAC;MACfE,WAAW,CAAC,EAAE,CAAC;IACjB,CAAC,CAAC,OAAOkB,KAAK,EAAE;MAAA,IAAAC,eAAA,EAAAC,oBAAA;MACdlB,cAAc,CAAC,uBAAuB,IAAI,EAAAiB,eAAA,GAAAD,KAAK,CAACG,QAAQ,cAAAF,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBG,IAAI,cAAAF,oBAAA,uBAApBA,oBAAA,CAAsBG,MAAM,KAAIL,KAAK,CAACpC,OAAO,CAAC,CAAC;IAC3F,CAAC,SAAS;MACRL,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAM+C,WAAW,GAAG,MAAOT,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBvC,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACF,MAAM4C,QAAQ,GAAG,MAAMpD,KAAK,CAACgD,IAAI,CAAC,6BAA6B,EAAE;QAC/DpB,QAAQ;QACRE;MACF,CAAC,CAAC;MAEF,MAAMQ,KAAK,GAAGc,QAAQ,CAACC,IAAI,CAACG,YAAY;MACxCrB,cAAc,CAACG,KAAK,CAAC;MACrBD,mBAAmB,CAACT,QAAQ,CAAC,CAAC,CAAC;MAC/BW,YAAY,CAACkB,OAAO,CAAC,cAAc,EAAEnB,KAAK,CAAC;MAC3CC,YAAY,CAACkB,OAAO,CAAC,UAAU,EAAE7B,QAAQ,CAAC,CAAC,CAAC;MAC5CH,aAAa,CAAC,IAAI,CAAC;MACnBQ,cAAc,CAAC,mBAAmB,CAAC;MACnCJ,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;MACjBE,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,OAAOkB,KAAK,EAAE;MAAA,IAAAS,gBAAA,EAAAC,qBAAA;MACd1B,cAAc,CAAC,gBAAgB,IAAI,EAAAyB,gBAAA,GAAAT,KAAK,CAACG,QAAQ,cAAAM,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBL,IAAI,cAAAM,qBAAA,uBAApBA,qBAAA,CAAsBL,MAAM,KAAIL,KAAK,CAACpC,OAAO,CAAC,CAAC;IACpF,CAAC,SAAS;MACRL,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMoD,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAM5D,KAAK,CAACgD,IAAI,CAAC,8BAA8B,CAAC;IAClD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdY,OAAO,CAACC,GAAG,CAAC,yDAAyD,CAAC;IACxE;IAEA3B,cAAc,CAAC,EAAE,CAAC;IAClBE,mBAAmB,CAAC,EAAE,CAAC;IACvBE,YAAY,CAACwB,UAAU,CAAC,cAAc,CAAC;IACvCxB,YAAY,CAACwB,UAAU,CAAC,UAAU,CAAC;IACnCtC,aAAa,CAAC,KAAK,CAAC;IACpBnB,aAAa,CAAC,EAAE,CAAC;IACjBQ,UAAU,CAAC,EAAE,CAAC;IACdmB,cAAc,CAAC,yBAAyB,CAAC;EAC3C,CAAC;EAED,MAAM+B,gBAAgB,GAAG,MAAOlB,CAAC,IAAK;IACpC,MAAMmB,IAAI,GAAGnB,CAAC,CAACoB,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9B,IAAI,CAACF,IAAI,EAAE;IAEXzD,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACF,IAAIyD,IAAI,CAACG,IAAI,KAAK,iBAAiB,EAAE;QACnC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;QAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEN,IAAI,CAAC;QAE7B,MAAMb,QAAQ,GAAG,MAAMpD,KAAK,CAACgD,IAAI,CAAC,qCAAqC,EAAEqB,QAAQ,EAAE;UACjF1B,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;QAEFrC,aAAa,CAAC8C,QAAQ,CAACC,IAAI,CAACmB,IAAI,CAAC;QACjC1D,UAAU,CAAC,uCAAuC,CAAC;MACrD,CAAC,MAAM;QACL,MAAM2D,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;QAC/BD,MAAM,CAACE,MAAM,GAAIC,KAAK,IAAK;UACzBtE,aAAa,CAACsE,KAAK,CAACV,MAAM,CAACW,MAAM,CAAC;QACpC,CAAC;QACDJ,MAAM,CAACK,UAAU,CAACb,IAAI,CAAC;MACzB;IACF,CAAC,CAAC,OAAOhB,KAAK,EAAE;MAAA,IAAA8B,gBAAA;MACd,IAAI,EAAAA,gBAAA,GAAA9B,KAAK,CAACG,QAAQ,cAAA2B,gBAAA,uBAAdA,gBAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;QAClClE,UAAU,CAAC,gCAAgC,CAAC;QAC5C8C,YAAY,CAAC,CAAC;MAChB,CAAC,MAAM;QACL9C,UAAU,CAAC,wBAAwB,GAAGmC,KAAK,CAACpC,OAAO,CAAC;MACtD;MACAgD,OAAO,CAACZ,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,SAAS;MACRzC,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMyE,qBAAqB,GAAG,MAAAA,CAAA,KAAY;IACxCvE,eAAe,CAAC,IAAI,CAAC;IACrB,IAAI;MACF,MAAM0C,QAAQ,GAAG,MAAMpD,KAAK,CAACkF,GAAG,CAAC,qCAAqC,CAAC;MACvE5E,aAAa,CAAC8C,QAAQ,CAACC,IAAI,CAAC,cAAc,CAAC,CAAC;MAC5CvC,UAAU,CAAC,2BAA2B,CAAC;IACzC,CAAC,CAAC,OAAOmC,KAAK,EAAE;MAAA,IAAAkC,gBAAA;MACd,IAAI,EAAAA,gBAAA,GAAAlC,KAAK,CAACG,QAAQ,cAAA+B,gBAAA,uBAAdA,gBAAA,CAAgBH,MAAM,MAAK,GAAG,EAAE;QAClClE,UAAU,CAAC,kCAAkC,CAAC;QAC9C8C,YAAY,CAAC,CAAC;MAChB,CAAC,MAAM;QACL9C,UAAU,CAAC,yBAAyB,CAAC;MACvC;MACA+C,OAAO,CAACZ,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,SAAS;MACRvC,eAAe,CAAC,KAAK,CAAC;IACxB;EACF,CAAC;EAED,MAAM0E,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjCxE,eAAe,CAAC,IAAI,CAAC;IACrB,IAAI;MACA,MAAMwC,QAAQ,GAAG,MAAMpD,KAAK,CAACgD,IAAI,CAAC,uCAAuC,EAAE;QACvEwB,IAAI,EAAEnE,UAAU;QAChBgF,EAAE,EAAE;MACR,CAAC,CAAC;;MAEF;MACA,IAAIjC,QAAQ,CAACC,IAAI,IAAID,QAAQ,CAACC,IAAI,CAACtC,WAAW,EAAE;QAC5CC,cAAc,CAACoC,QAAQ,CAACC,IAAI,CAACtC,WAAW,CAAC;QACzCD,UAAU,CAAC,4DAA4D,CAAC;MAC5E,CAAC,MAAM;QACHA,UAAU,CAAC,4CAA4C,CAAC;MAC5D;IACJ,CAAC,CAAC,OAAOmC,KAAK,EAAE;MAAA,IAAAqC,gBAAA;MACZ,IAAI,EAAAA,gBAAA,GAAArC,KAAK,CAACG,QAAQ,cAAAkC,gBAAA,uBAAdA,gBAAA,CAAgBN,MAAM,MAAK,GAAG,EAAE;QAClClE,UAAU,CAAC,kCAAkC,CAAC;QAC9C8C,YAAY,CAAC,CAAC;MAChB,CAAC,MAAM;QAAA,IAAA2B,gBAAA,EAAAC,qBAAA;QACL1E,UAAU,CAAC,2BAA2B,IAAI,EAAAyE,gBAAA,GAAAtC,KAAK,CAACG,QAAQ,cAAAmC,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBlC,IAAI,cAAAmC,qBAAA,uBAApBA,qBAAA,CAAsBlC,MAAM,KAAIL,KAAK,CAACpC,OAAO,CAAC,CAAC;MAC3F;MACAgD,OAAO,CAACZ,KAAK,CAACA,KAAK,CAAC;IACxB,CAAC,SAAS;MACNrC,eAAe,CAAC,KAAK,CAAC;IAC1B;EACF,CAAC;EAED,MAAM6E,eAAe,GAAIC,UAAU,IAAK;IACtC,IAAIA,UAAU,CAACC,QAAQ,EAAE;MACvB;MACArF,aAAa,CAACsF,QAAQ,IAAI;QACxB,MAAMC,OAAO,GAAGD,QAAQ,CAACE,OAAO,CAACJ,UAAU,CAACC,QAAQ,EAAED,UAAU,CAACK,QAAQ,CAAC;QAC1E,OAAOF,OAAO;MAChB,CAAC,CAAC;IACJ,CAAC,MAAM;MACL;MACAvF,aAAa,CAACsF,QAAQ,IAAI;QACxB;QACA,MAAMC,OAAO,GAAGD,QAAQ,CAACI,IAAI,CAAC,CAAC,GAAG,MAAM,GAAGN,UAAU,CAACK,QAAQ;QAC9D,OAAOF,OAAO;MAChB,CAAC,CAAC;IACJ;EACF,CAAC;EAED,MAAMI,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC1E,cAAc,CAAC,IAAI,CAAC;IACpB,IAAI;MACFsC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEzD,UAAU,CAAC,CAAC,CAAC;;MAEjD,MAAM+C,QAAQ,GAAG,MAAMpD,KAAK,CAACgD,IAAI,CAAC,qCAAqC,EAAE;QACvEwB,IAAI,EAAEnE;MACR,CAAC,EAAE;QACD6F,YAAY,EAAE,MAAM,CAAE;MACxB,CAAC,CAAC;MAEFrC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEV,QAAQ,CAAC,CAAC,CAAC;;MAE7C;MACA,MAAM+C,GAAG,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAAC,IAAIC,IAAI,CAAC,CAACnD,QAAQ,CAACC,IAAI,CAAC,EAAE;QAAEe,IAAI,EAAE;MAAkB,CAAC,CAAC,CAAC;MAC9F,MAAMoC,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MACxCF,IAAI,CAACG,IAAI,GAAGR,GAAG;MACfK,IAAI,CAACI,YAAY,CAAC,UAAU,EAAE,YAAY,CAAC;MAC3CH,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,IAAI,CAAC;MAC/BA,IAAI,CAACO,KAAK,CAAC,CAAC;MACZP,IAAI,CAACQ,MAAM,CAAC,CAAC;MACbZ,MAAM,CAACC,GAAG,CAACY,eAAe,CAACd,GAAG,CAAC;MAE/BrF,UAAU,CAAC,iCAAiC,CAAC;IAC/C,CAAC,CAAC,OAAOmC,KAAK,EAAE;MAAA,IAAAiE,gBAAA,EAAAC,qBAAA;MACdtD,OAAO,CAACZ,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC,CAAC,CAAC;MACvCY,OAAO,CAACZ,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAACG,QAAQ,CAAC,CAAC,CAAC;MAClDtC,UAAU,CAAC,0BAA0B,IAAI,EAAAoG,gBAAA,GAAAjE,KAAK,CAACG,QAAQ,cAAA8D,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgB7D,IAAI,cAAA8D,qBAAA,uBAApBA,qBAAA,CAAsB7D,MAAM,KAAIL,KAAK,CAACpC,OAAO,CAAC,CAAC;IAC1F,CAAC,SAAS;MACRU,cAAc,CAAC,KAAK,CAAC;IACvB;EACF,CAAC;EAED,MAAM6F,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5BC,UAAU,CAAC,IAAI,CAAC;IAChBC,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAMlE,QAAQ,GAAG,MAAMmE,KAAK,CAAC,mCAAmC,EAAE;QAChEC,MAAM,EAAE,MAAM;QACd7E,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CkE,IAAI,EAAEY,IAAI,CAACC,SAAS,CAAC;UAAElD,IAAI,EAAEnE;QAAW,CAAC;MAC3C,CAAC,CAAC;MAEF,IAAI,CAAC+C,QAAQ,CAACuE,EAAE,EAAE;QAChB,MAAMC,OAAO,GAAG,MAAMxE,QAAQ,CAACyE,IAAI,CAAC,CAAC;QACrC,MAAM,IAAIC,KAAK,CAACF,OAAO,CAACtE,MAAM,IAAI,6BAA6B,CAAC;MAClE;MAEA,MAAMD,IAAI,GAAG,MAAMD,QAAQ,CAACyE,IAAI,CAAC,CAAC;MAClCE,QAAQ,CAAC,eAAe,EAAE;QAAEC,KAAK,EAAE;UAAEC,UAAU,EAAE5E;QAAK;MAAE,CAAC,CAAC;IAC5D,CAAC,CAAC,OAAO6E,GAAG,EAAE;MACZZ,QAAQ,CAACY,GAAG,CAACrH,OAAO,CAAC;IACvB,CAAC,SAAS;MACRwG,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,IAAI,CAAC7F,UAAU,EAAE;IACf,oBACEtB,OAAA;MAAKiI,SAAS,EAAC,KAAK;MAAAC,QAAA,gBAClBlI,OAAA;QAAAkI,QAAA,EAAI;MAA2B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEpCtI,OAAA;QAAKiI,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7BlI,OAAA;UAAKiI,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1BlI,OAAA;YACEiI,SAAS,EAAEzG,SAAS,GAAG,QAAQ,GAAG,EAAG;YACrC+G,OAAO,EAAEA,CAAA,KAAM9G,YAAY,CAAC,IAAI,CAAE;YAAAyG,QAAA,EACnC;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTtI,OAAA;YACEiI,SAAS,EAAE,CAACzG,SAAS,GAAG,QAAQ,GAAG,EAAG;YACtC+G,OAAO,EAAEA,CAAA,KAAM9G,YAAY,CAAC,KAAK,CAAE;YAAAyG,QAAA,EACpC;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eAENtI,OAAA;UAAMwI,QAAQ,EAAEhH,SAAS,GAAG6B,WAAW,GAAGV,cAAe;UAAAuF,QAAA,gBACvDlI,OAAA;YAAAkI,QAAA,EAAK1G,SAAS,GAAG,OAAO,GAAG;UAAU;YAAA2G,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAE3CtI,OAAA;YAAKiI,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACzBlI,OAAA;cAAAkI,QAAA,EAAO;YAAS;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACxBtI,OAAA;cACEkE,IAAI,EAAC,MAAM;cACXuE,KAAK,EAAE/G,QAAS;cAChBgH,QAAQ,EAAG9F,CAAC,IAAKjB,WAAW,CAACiB,CAAC,CAACoB,MAAM,CAACyE,KAAK,CAAE;cAC7CE,QAAQ;YAAA;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eAENtI,OAAA;YAAKiI,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACzBlI,OAAA;cAAAkI,QAAA,EAAO;YAAS;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACxBtI,OAAA;cACEkE,IAAI,EAAC,UAAU;cACfuE,KAAK,EAAE7G,QAAS;cAChB8G,QAAQ,EAAG9F,CAAC,IAAKf,WAAW,CAACe,CAAC,CAACoB,MAAM,CAACyE,KAAK,CAAE;cAC7CE,QAAQ;YAAA;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eAENtI,OAAA;YAAQkE,IAAI,EAAC,QAAQ;YAAC0E,QAAQ,EAAEvI,SAAU;YAAA6H,QAAA,EACvC7H,SAAS,GAAG,eAAe,GAAImB,SAAS,GAAG,OAAO,GAAG;UAAW;YAAA2G,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3D,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,EAENxG,WAAW,iBACV9B,OAAA;UAAKiI,SAAS,EAAC,cAAc;UAAAC,QAAA,EAC1BpG;QAAW;UAAAqG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;;EAEA;EACA,oBACEtI,OAAA;IAAKiI,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBlI,OAAA;MAAKiI,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACrBlI,OAAA;QAAAkI,QAAA,EAAI;MAA2B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpCtI,OAAA;QAAKiI,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACxBlI,OAAA;UAAAkI,QAAA,GAAM,WAAS,EAAChG,gBAAgB,EAAC,GAAC;QAAA;UAAAiG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACzCtI,OAAA;UAAQuI,OAAO,EAAE7E,YAAa;UAACuE,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAEtD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENtI,OAAA;MAAKiI,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BlI,OAAA;QAAKiI,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7BlI,OAAA;UAAAkI,QAAA,EAAI;QAAkB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC3BtI,OAAA;UAAOkE,IAAI,EAAC,MAAM;UAAC2E,MAAM,EAAC,iBAAiB;UAACH,QAAQ,EAAE5E;QAAiB;UAAAqE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvE,CAAC,eAENtI,OAAA;QAAKiI,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC/BlI,OAAA;UAAAkI,QAAA,EAAI;QAAmB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5BtI,OAAA;UAAQuI,OAAO,EAAExD,qBAAsB;UAAC6D,QAAQ,EAAErI,YAAa;UAAA2H,QAAA,EAC5D3H,YAAY,GAAG,eAAe,GAAG;QAAyB;UAAA4H,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENtI,OAAA;MAAKiI,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BlI,OAAA;QAAAkI,QAAA,EAAI;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpBtI,OAAA;QACEyI,KAAK,EAAEtI,UAAW;QAClBuI,QAAQ,EAAG9F,CAAC,IAAKxC,aAAa,CAACwC,CAAC,CAACoB,MAAM,CAACyE,KAAK,CAAE;QAC/CK,WAAW,EAAC;MAAiC;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENtI,OAAA;MAAKiI,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BlI,OAAA;QACEuI,OAAO,EAAErD,cAAe;QACxB0D,QAAQ,EAAE,CAACzI,UAAU,IAAIM,YAAa;QAAAyH,QAAA,EAErCzH,YAAY,GAAG,eAAe,GAAG;MAAiB;QAAA0H,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,eAETtI,OAAA;QACEuI,OAAO,EAAErB,SAAU;QACnB0B,QAAQ,EAAE,CAACzI,UAAU,IAAIM,YAAa;QAAAyH,QAAA,EAErCa,UAAU,GAAG,aAAa,GAAG;MAAY;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC,eAETtI,OAAA;QACEuI,OAAO,EAAExC,kBAAmB;QAC5B6C,QAAQ,EAAE,CAACzI,UAAU,IAAIiB,WAAY;QACrC6G,SAAS,EAAC,YAAY;QAAAC,QAAA,EAErB9G,WAAW,GAAG,cAAc,GAAG;MAAsB;QAAA+G,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAEL3H,OAAO,iBACNX,OAAA;MAAKiI,SAAS,EAAC,SAAS;MAAAC,QAAA,eACtBlI,OAAA;QAAAkI,QAAA,EAAIvH;MAAO;QAAAwH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CACN,EAGAU,MAAM,CAACC,IAAI,CAACpI,WAAW,CAAC,CAACqI,MAAM,GAAG,CAAC,iBAClClJ,OAAA;MAAKiI,SAAS,EAAC,uBAAuB;MAAAC,QAAA,gBACpClI,OAAA;QAAAkI,QAAA,EAAI;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAChCU,MAAM,CAACG,OAAO,CAACtI,WAAW,CAAC,CAACuI,GAAG,CAAC,CAAC,CAACC,OAAO,EAAEC,kBAAkB,CAAC,KAC7DA,kBAAkB,CAACJ,MAAM,GAAG,CAAC,iBAC3BlJ,OAAA;QAAmBiI,SAAS,EAAC,oBAAoB;QAAAC,QAAA,gBAC/ClI,OAAA;UAAAkI,QAAA,EAAKmB,OAAO,CAACE,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGH,OAAO,CAACI,KAAK,CAAC,CAAC;QAAC;UAAAtB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC7DtI,OAAA;UAAKiI,SAAS,EAAC,oBAAoB;UAAAC,QAAA,EAChCoB,kBAAkB,CAACF,GAAG,CAAC,CAAC5D,UAAU,EAAEkE,KAAK,kBACxC1J,OAAA;YAEEuI,OAAO,EAAEA,CAAA,KAAMhD,eAAe,CAACC,UAAU,CAAE;YAC3CyC,SAAS,EAAC,gBAAgB;YAAAC,QAAA,EAEzB1C,UAAU,CAACC,QAAQ,GAClB,aAAaD,UAAU,CAACC,QAAQ,CAACkE,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,MAAM,GACvD,SAASnE,UAAU,CAACK,QAAQ,CAAC8D,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC;UAAM,GANhDD,KAAK;YAAAvB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAQJ,CACT;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA,GAfEe,OAAO;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAgBZ,CAER,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACpI,EAAA,CAvaQD,GAAG;AAAA2J,EAAA,GAAH3J,GAAG;AAyaZ,eAAeA,GAAG;AAAC,IAAA2J,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}